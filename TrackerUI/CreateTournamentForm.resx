<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>